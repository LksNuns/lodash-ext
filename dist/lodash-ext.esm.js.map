{"version":3,"file":"lodash-ext.esm.js","sources":["../src/camelize-keys.js","../src/canonic.js","../src/blank.js","../src/delete-blanks.js","../src/dig.js","../src/parse.js","../src/pick-parse.js","../src/search.js","../src/snakeize-keys.js","../src/lodash-ext.js"],"sourcesContent":["import _ from 'lodash'\n\n/**\n * Creates a new object, transforming all of its properties to camelCase format.\n * Useful when handling (fetching) API data.\n *\n * usage:\n * ```js\n * let json = { first: 1, second-place: 2, third_one: 3 }\n *\n * _.camelizeKeys(json) == { first: 1, secondPlace: 2, thirdOne: 3 }\n * ```\n *\n * @param  {Object} object source object to have its keys/properties transformed to camelCase\n * @return {Object}        \"clone\" object with all keys/properties in camelCase format\n */\nfunction deepCamelizeKeys(object) {\n  let camelized = _.cloneDeep(object)\n\n  _.forOwn(object, (value, key) => {\n\n    // checks that a value is a plain object or an array - for recursive key conversion\n    // recursively update keys of any values that are also objects\n    if (_.isPlainObject(value) || _.isArray(value)) {\n      value = deepCamelizeKeys(value)\n      camelized[key] = value\n    }\n\n    const camelizedKey = _.camelCase(key)\n    if (camelizedKey !== key) {\n      camelized[camelizedKey] = value\n      delete camelized[key]\n    }\n  })\n\n  return camelized\n}\n\nfunction camelizeKeys(value) {\n  if (typeof (value) === 'object') {\n    return deepCamelizeKeys(value)\n  }\n  return _.camelCase(value)\n}\n\n\nexport default camelizeKeys\n","import _ from 'lodash'\n\n\n/**\n * Creates a canonical representation of the given string:\n * - trimmed\n * - lower case\n * - \"unaccented\" (ascii letters only)\n * - white spaces normalizet to single space\n *\n * @param  {String} string the source to produce a canonical value\n * @return {String}        the canonical representation of the given string\n */\nfunction canonic(string) {\n  if (string == null) return string\n  let text = string + ''\n  return _.deburr(text.trim().replace(/\\s{2,}/g, ' ')).toLowerCase()\n}\n\n\nexport default canonic\n","import _ from 'lodash'\n\n// inspired by Rails/ActiveSupport Object#blank?\nfunction blank(value) {\n  switch (typeof value) {\n    case 'string': return !value.trim().length\n    case 'boolean': return false\n    default:\n      // Rails like `blank?` - @https://github.com/lodash/lodash/issues/2261#issuecomment-211380044\n      return (_.isEmpty(value) && !_.isNumber(value)) || _.isNaN(value)\n  }\n}\n\nfunction isBlank(...args) {\n  // console.warn('DEPRECATED: _.isBlank is deprecated. Use _.blank instead.')\n\n  return blank(...args)\n}\n\n\n// inspired by Rails/ActiveSupport Object#present?\nfunction present(obj) {\n  return !blank(obj)\n}\n\nfunction isPresent(...args) {\n  // console.warn('DEPRECATED: _.isPresent is deprecated. Use _.present instead.')\n\n  return present(...args)\n}\n\n\nexport default blank\nexport {\n  blank,\n  present,\n  isBlank, // DEPRECATED\n  isPresent // DEPRECATED\n}\n","import _ from 'lodash'\nimport { blank } from './blank'\n\n/**\n * Creates a new object, ignoring all keys/properties with \"empty\" values: null, undefined or empty objects or arrays.\n *\n * usage:\n * ```js\n * let obj = { value1: \"val1\", value2: undefined, value3: null, value4: {} }\n *\n * _.deleteBlanks(obj) === { value1: \"val1\" }\n * ````\n *\n * @param  {Object} object source object to have its \"blank properties\" deleted\n * @return {Object}        new object without the \"blank\" properties\n */\nfunction deleteBlanks(object) {\n  let result = _.cloneDeep(object)\n\n  _.forOwn(result, (value, key) => {\n    if (_.isPlainObject(value) || _.isArray(value)) {\n      result[key] = deleteBlanks(value)\n\n      if (_.isArray(result[key])) {\n        _.remove(result[key], blank)\n      }\n\n      if (blank(result[key])) {\n        delete result[key]\n      }\n\n    } else if (blank(value)) {\n      delete result[key]\n    }\n  })\n\n  if (_.isArray(result)) {\n    _.remove(result, blank)\n  }\n\n  return result\n}\n\n\nexport default deleteBlanks\n","import _ from 'lodash'\n\n/**\n * \"Digs\" the object searching for nested properties, ensuring it exists - or returning null.\n * Inspired by Ruby Object#dig.\n *\n * usage:\n * ```js\n * let family = { parent: { child: \"Okay!\" } }\n *\n * _.dig(family, 'parent', 'child')  === \"Okay!\"\n * _.dig(family, 'parent', 'child', 'grandchild')  === undefined\n * _.dig(family, 'no', 'not really') === undefined\n * ````\n *\n * @param  {Object}    object source object\n * @param  {...String} keys   sequence of keys defining the path to be dug\n * @return {Object}           value of the nested properti, or `undefined` if it does not exist\n */\nfunction dig(object, ...keys) {\n  // _.dig(family, 'parent', 'child') => _.get(family, 'parent.child')\n  console.warn('[DEPRECATED] _.dig is deprecated. Use _.get instead.')\n\n  let path = _.join(keys, '.')\n  return _.get(object, path)\n}\n\n\nexport default dig\n","import _ from 'lodash'\nimport { blank } from './blank'\n\n\nfunction parse(source, type, options = {}) {\n  if (_.isArray(source)) {\n    return _.map(source, (v) => parse(v, type, options))\n  }\n\n  if (_.isPlainObject(source)) {\n    return _.reduce(_.keys(source), (parsedObj, key) => {\n      parsedObj[key] = parse(source[key], type, options)\n      return parsedObj\n    }, {})\n  }\n\n  // scalar\n  return parse.as(type, source, options)\n}\n\n\nparse.as = function as(type, value, options = {}) {\n  let parseFn = $customParsers[type] || $parsers[type]\n  if (!parseFn) throw new Error(`[@caiena/lodash-ext] _.parse: don't know how to parse as \"${type}\"`)\n\n  return parseFn(value, options)\n}\n\nparse.use = function use(parsers) {\n  _.each(parsers, (parseFn, type) => {\n    if (typeof parseFn !== 'function') {\n      throw new Error(`[@caiena/lodash-ext] _.parse: parser for type \"${type}\" is not a function`)\n    }\n\n    if (_.has($customParsers, type)) {\n      console.warn(`[@caiena/lodash-ext] _.parse: overriding already defined custom parser for type \"${type}\"`)\n    }\n    else if (_.has($parsers, type)) {\n      console.warn(`[@caiena/lodash-ext] _.parse: overriding default parser for type \"${type}\"`)\n    }\n\n    // add to $customParsers\n    $customParsers[type] = parseFn\n  })\n}\n\nparse.remove = function remove(customParserTypes) {\n  let types = _.castArray(customParserTypes)\n  let unknownTypes = _.difference(types, _.keys($customParsers))\n\n  if (!blank(unknownTypes)) {\n    throw new Error(`[@caiena/lodash-ext] _.parse: can't remove parser for unknown custom type(s) \"${unknownTypes}\"`)\n  }\n\n  _.each(types, (type) => { delete $customParsers[type] })\n}\n\n\nconst $customParsers = {}\n\nconst $parsers = {\n  /**\n   * Interpreta o valor como Boolean. Caso não consiga, retorna\n   * options.defaultValue - que por padrão é `undefined`.\n   *\n   * @param  {[type]} value   [description]\n   * @param  {Object} options [description]\n   * @return {[type]}         [description]\n   */\n  boolean(value, options = {}) {\n    const { defaultValue } = options\n    let boolean = defaultValue\n\n    if (value === 'false' || value === false) {\n      boolean = false\n    } else if (value === 'true' || value === true) {\n      boolean = true\n    }\n\n    return boolean\n  },\n\n  /**\n   * Interpreta o valor como Float. Caso não consiga, retorna\n   * options.defaultValue - que por padrão é `undefined`.\n   *\n   * @param  {[type]} value   [description]\n   * @param  {Object} options [description]\n   * @return {[type]}         [description]\n   */\n  float(value, options = {}) {\n    const { defaultValue } = options\n\n    // ignoring malformed strings starting with numbers\n    // e.g. parseFloat(\"+12.9-some_TEXT.in@here/AlR1Gh7?!\") == 12.9\n    // https://stackoverflow.com/a/1830547\n    if ((typeof value === 'string') && (/^\\s*$/.test(value) || isNaN(value))) {\n      return defaultValue\n    }\n\n    const float = parseFloat(value)\n\n    return isNaN(float) ? defaultValue : float\n  },\n\n  /**\n   * Interpreta o valor como Integer. Caso não consiga, retorna\n   * options.defaultValue - que por padrão é `undefined`.\n   *\n   * @param  {[type]} value   [description]\n   * @param  {Object} options [description]\n   * @return {[type]}         [description]\n   */\n  integer(value, options = {}) {\n    const { defaultValue } = options\n\n    // ignoring malformed strings starting with numbers\n    // e.g. parseInt(\"+12.9-some_TEXT.in@here/AlR1Gh7?!\", 10) == 12\n    // https://stackoverflow.com/a/1830547\n    if ((typeof value === 'string') && (/^\\s*$/.test(value) || isNaN(value))) {\n      return defaultValue\n    }\n\n    const int = parseInt(value, 10)\n\n    return isNaN(int) ? defaultValue : int\n  },\n\n\n  json(value, options = {}) {\n    const { defaultValue } = options\n\n    let object = defaultValue\n\n    try {\n      object = JSON.parse(value)\n    } catch (e) {}\n\n    return object\n  },\n\n  /**\n   * Interpreta o valor como String. Caso seja String vazia (`''`), retorna\n   * options.defaultValue - que por padrão é `undefined`.\n   *\n   * @param  {[type]} value   [description]\n   * @param  {Object} options [description]\n   * @return {[type]}         [description]\n   */\n  string(value, options = {}) {\n    const { defaultValue } = options\n\n    if (value == null)    return '' // null or undefined\n    if (value === true)   return 'true'\n    if (value === false)  return 'false'\n    if (_.isArray(value)) return value.toString()\n    if (_.isPlainObject(value)) return JSON.stringify(value)\n\n    return (value && value.toString()) || defaultValue\n  },\n}\n\n\n\nexport default parse\n","import _ from 'lodash'\nimport _parse from './parse'\n\n\n/**\n * Picks and parses each picked value as defined by a config object, using _.parse().\n *\n * usage:\n * ```js\n * // express route, picking and parsing a post/patch request\n * let params = _.pickParse(req.body, {\n *   'id':              'integer',\n *   'user.name':       'string',\n *   'user.admin_flag': 'boolean'\n * })\n *````\n *\n * ```javascript\n * // browser, parsing url query string\n * let params = _.pickParse($route.query, {\n *     // filters\n *     address:   'string',\n *     available: 'boolean',\n *     code:      'integer',\n *     phone:     'string',\n *     since:     'string',\n *     max:       'float',\n *     min:       'float',\n *\n *     // text search\n *     q: 'string',\n *\n *     // paging and sorting\n *     page:  'integer',\n *     sort:  'string',\n *     order: 'string'\n *   })\n * )\n * ````\n *\n * @param  {Object} object  source object\n * @param  {Object} config  config object, mapping attributes to be picked to their parsing type\n * @param  {Object} options not used\n * @return {Object}         Objeto resultado da interpretação definida\n */\nfunction pickParse(object, config = {}, options = {}) {\n  let keys = _.keys(config)\n  let picked = _.pick(object, keys)\n\n  return _.reduce(keys, (pickedAndParsed, key) => {\n    let type = _.get(config, key)\n    let value = _.get(picked, key)\n\n    let parsed = _parse(value, type, options)\n    _.set(pickedAndParsed, key, parsed)\n\n    return pickedAndParsed\n  }, {})\n}\n\n\nexport default pickParse\n","import _ from 'lodash'\nimport _canonic from './canonic'\n\n\nfunction search(source, target, { canonic = true } = {}) {\n  let _source = canonic ? _canonic(source) : source\n  let _target = canonic ? _canonic(target) : target\n\n  return _.includes(_source, _target)\n}\n\n\nexport default search\n","import _ from 'lodash'\n\n/**\n * Creates a new object transforming all of its properties to snake_case format.\n * Useful when handling (fetching) API data.\n *\n * usage:\n * ```js\n * let json = { first: 1, secondPlace: 2, ThirdOne: 3 }\n *\n * _.snakeizeKeys(json) == { first: 1, second_place: 2, third_one: 3 }\n * ````\n *\n * @param  {Object} object source object to have its keys/properties transformed to snake_case\n * @return {Object}        \"clone\" object with all keys/properties in snake_case format\n */\nfunction deepSnakeizeKeys(object) {\n  let snakeized = _.cloneDeep(object)\n\n  _.forOwn(object, (value, key) => {\n\n    // checks that a value is a plain object or an array - for recursive key conversion\n    // recursively update keys of any values that are also objects\n    if (_.isPlainObject(value) || _.isArray(value)) {\n      value = deepSnakeizeKeys(value)\n      snakeized[key] = value\n    }\n\n    const snakeizedKey = _.snakeCase(key)\n    if (snakeizedKey !== key) {\n      snakeized[snakeizedKey] = value\n      delete snakeized[key]\n    }\n  })\n\n  return snakeized\n}\n\nfunction snakeizeKeys(value) {\n  if (typeof (value) === 'object') {\n    return deepSnakeizeKeys(value)\n  }\n  return _.snakeCase(value)\n}\n\n\nexport default snakeizeKeys\n","import _ from 'lodash'\nimport camelizeKeys from './camelize-keys'\nimport canonic from './canonic'\nimport deleteBlanks from './delete-blanks'\nimport dig from './dig'\nimport { blank, isBlank, present, isPresent } from './blank'\nimport parse from './parse'\nimport pickParse from './pick-parse'\nimport search from './search'\nimport snakeizeKeys from './snakeize-keys'\n\n\nconst lodashExt = _.runInContext()\nlodashExt.mixin({\n\n  // functions to handle object properties/keys transformation\n  camelizeKeys,\n  snakeizeKeys,\n  deleteBlanks,\n  dig,\n\n  // rails like #blank? and #present?\n  blank,\n  present,\n  isBlank, // DEPRECATED\n  isPresent, // DEPRECATED\n\n  // string functions\n  canonic,\n  search,\n\n  // parsing functions\n  parse,\n  pickParse,\n\n  // aliasing commonly used functions\n  camelize:   _.camelCase,\n  // capitalize: _.capitalize,\n  dasherize:  _.kebabCase,\n  kebabize:   _.kebabCase,\n  underscore: _.snakeCase,\n  snakeize:   _.snakeCase,\n\n  clone:    _.cloneDeep,\n  // extend:   _.extend,\n  // merge:    _.merge,\n  equals:   _.isEqual,\n  contains: _.isMatch,\n\n  unaccent: _.deburr\n})\n\n\nexport default lodashExt\n"],"names":["deepCamelizeKeys","object","camelized","_","cloneDeep","forOwn","value","key","isPlainObject","isArray","camelizedKey","camelCase","camelizeKeys","canonic","string","text","deburr","trim","replace","toLowerCase","blank","length","isEmpty","isNumber","isNaN","isBlank","present","obj","isPresent","deleteBlanks","result","remove","dig","console","warn","keys","path","join","get","parse","source","type","options","map","v","reduce","parsedObj","as","parseFn","$customParsers","$parsers","Error","use","parsers","each","has","customParserTypes","types","castArray","unknownTypes","difference","boolean","defaultValue","float","test","parseFloat","integer","int","parseInt","json","JSON","e","toString","stringify","pickParse","config","picked","pick","pickedAndParsed","parsed","_parse","set","search","target","_source","_canonic","_target","includes","deepSnakeizeKeys","snakeized","snakeizedKey","snakeCase","snakeizeKeys","lodashExt","runInContext","mixin","camelize","dasherize","kebabCase","kebabize","underscore","snakeize","clone","equals","isEqual","contains","isMatch","unaccent"],"mappings":"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"}